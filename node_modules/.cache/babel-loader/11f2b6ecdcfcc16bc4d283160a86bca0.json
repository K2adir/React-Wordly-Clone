{"ast":null,"code":"var _jsxFileName = \"/Users/k2/Documents/Development/Projects/React-wordly-clone/src/components/Game/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { sample } from \"../../utils\";\nimport { WORDS } from \"../../data\"; // Pick a random word on every pageload.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst answer = sample(WORDS); // To make debugging easier, we'll log the solution in the console.\n\nconsole.info({\n  answer\n});\n\nfunction Game() {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"guess-input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"guess-input\",\n        children: \"Enter guess:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"guess-input\",\n        type: \"text\",\n        onChange: e => {\n          setInput(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Game, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/k2/Documents/Development/Projects/React-wordly-clone/src/components/Game/Game.js"],"names":["React","useState","sample","WORDS","answer","console","info","Game","input","setInput","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,KAAT,QAAsB,YAAtB,C,CAEA;;;;AACA,MAAMC,MAAM,GAAGF,MAAM,CAACC,KAAD,CAArB,C,CACA;;AACAE,OAAO,CAACC,IAAR,CAAa;AAAEF,EAAAA;AAAF,CAAb;;AAEA,SAASG,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,sBACE;AAAA,4BACE;AAAM,MAAA,KAAK,EAAC,qBAAZ;AAAA,8BACE;AAAO,QAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,EAAE,EAAC,aADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAGS,CAAD,IAAO;AACfD,UAAAA,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA,gBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAeD;;GAjBQD,I;;KAAAA,I;AAmBT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { sample } from \"../../utils\";\nimport { WORDS } from \"../../data\";\n\n// Pick a random word on every pageload.\nconst answer = sample(WORDS);\n// To make debugging easier, we'll log the solution in the console.\nconsole.info({ answer });\n\nfunction Game() {\n  const [input, setInput] = useState(\"\");\n  return (\n    <>\n      <form class=\"guess-input-wrapper\">\n        <label for=\"guess-input\">Enter guess:</label>\n        <input\n          id=\"guess-input\"\n          type=\"text\"\n          onChange={(e) => {\n            setInput(e.target.value);\n          }}\n        />\n      </form>\n      <h1>{input}</h1>\n    </>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}