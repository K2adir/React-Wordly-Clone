{"ast":null,"code":"var _jsxFileName = \"/Users/k2/Documents/Development/Projects/React-wordly-clone/src/components/Guess/Guess.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../../styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Guess() {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [submitted, setSubmitted] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitted([...submitted, input]);\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guess\",\n      children: submitted.map((text, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"guess-input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"guess-input\",\n        children: \"Enter guess:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        maxLength: \"5\",\n        minLength: \"5\",\n        value: input,\n        id: \"guess-input\",\n        type: \"text\",\n        onChange: e => {\n          setInput(e.target.value.toUpperCase());\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), input.length >= 5 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Guess, \"wd3mpHszGqEYW16bKpmtRghQ4i0=\");\n\n_c = Guess;\nexport default Guess;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guess\");","map":{"version":3,"sources":["/Users/k2/Documents/Development/Projects/React-wordly-clone/src/components/Guess/Guess.js"],"names":["React","useState","Guess","input","setInput","submitted","setSubmitted","handleSubmit","e","preventDefault","map","text","index","target","value","toUpperCase","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;;;;AACA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeF,KAAf,CAAD,CAAZ;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACGC,SAAS,CAACK,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,kBACb;AAAA,kBAAkBD;AAAlB,SAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAM,MAAA,QAAQ,EAAEL,YAAhB;AAA8B,MAAA,SAAS,EAAC,qBAAxC;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAC,GADZ;AAEE,QAAA,SAAS,EAAC,GAFZ;AAGE,QAAA,KAAK,EAAEJ,KAHT;AAIE,QAAA,EAAE,EAAC,aAJL;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,QAAQ,EAAGK,CAAD,IAAO;AACfJ,UAAAA,QAAQ,CAACI,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeC,WAAf,EAAD,CAAR;AACD;AARH;AAAA;AAAA;AAAA;AAAA,cAFF,EAYGZ,KAAK,CAACa,MAAN,IAAgB,CAAhB,iBAAqB;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAwBD;;GAlCQd,K;;KAAAA,K;AAoCT,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"../../styles.css\";\nfunction Guess() {\n  const [input, setInput] = useState(\"\");\n  const [submitted, setSubmitted] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmitted([...submitted, input]);\n    setInput(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"guess\">\n        {submitted.map((text, index) => (\n          <div key={index}>{text}</div>\n        ))}\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"guess-input-wrapper\">\n        <label htmlFor=\"guess-input\">Enter guess:</label>\n        <input\n          maxLength=\"5\"\n          minLength=\"5\"\n          value={input}\n          id=\"guess-input\"\n          type=\"text\"\n          onChange={(e) => {\n            setInput(e.target.value.toUpperCase());\n          }}\n        />\n        {input.length >= 5 && <button type=\"submit\">Submit</button>}\n      </form>\n    </>\n  );\n}\n\nexport default Guess;\n"]},"metadata":{},"sourceType":"module"}